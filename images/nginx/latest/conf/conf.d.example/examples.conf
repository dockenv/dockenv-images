server {
    listen [::]:80;
    server_name example.com www.example.com;
    return 301 https://example.com$request_uri;
}

server {
    # listen [::]:443;
    # Enable QUIC and HTTP/3.
    listen 443 quic reuseport;
    listen 443 ssl http2;
    listen [::]:443 ssl http2 ipv6only=on; ## listen for ipv6
    http2_push_preload on;
    # For https
    # listen 443 ssl;
    # listen [::]:443 ssl ipv6only=on;
    # ssl_certificate /etc/nginx/ssl/default.crt;
    # ssl_certificate_key /etc/nginx/ssl/default.key;

    server_name app.test;
    root /var/www/app;
    # autoindex off;
    index index.php index.html index.htm;
    # 可选 utf-8 gbk gb2312
    charset $charset;

    # 使用 301 强制 HTTPS
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

    location ~* \.php$ {
        include fastcgi_params;
        try_files $uri =404;
        try_files $fastcgi_script_name =404;
        # cgi mode
        # fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        # fpm mode
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_buffer_size 32k;
        fastcgi_buffers 16 16k;
        fastcgi_read_timeout 600;
        fastcgi_index index.php;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param TIDEWAYS_SAMPLERATE "25";
        fastcgi_param SCRIPT_NAME $fastcgi_script_name;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        # fastcgi_param PHP_VALUE open_basedir=$document_root:/tmp/:/proc/;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        # fastcgi_split_path_info ^(.+?\.php)(/.*)$;
    }

    # 匹配到 url 则跳转 如 github 下载
    location ~ ^/[^/]+/[^/]+/releases/download/ {
        return 301 https://download.fastgit.org$request_uri;
    }

    # Disable .htaccess and other hidden files
    # location ~ /\. {
    # exclude .well-known
    location ~ /\.(?!well-known).* {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Anti Agent Bot DDoS
    # If behind CDN, use folloing commented code
    # if ($http_x_forwarded_for != $remote_addr) {
    #     return 503;
    # }
    if ($proxy_add_x_forwarded_for != $remote_addr) {
        return 503;
    }
}
