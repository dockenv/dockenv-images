server {
    listen 80;
    # listen ipv6 all network interface
    listen [::]:80;
    listen 443 ssl http2;
    server_name _;
    index index.html index.htm index.php;
    root /var/www;

    access_log /var/log/nginx/yoursite.com_access.log;
    error_log /var/log/nginx/yoursite.com_error.log debug;

    # SSL
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /var/www/cert/fg.pem;

    ssl_certificate /var/www/cert/fg.pem;
    ssl_certificate_key /var/www/cert/fg.key;

    # Run following command & set permission before configuring
    # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /var/lib/nginx/dhparam.pem
    ssl_dhparam /var/lib/nginx/dhparam.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 60m;
    ssl_session_tickets off;

    include /etc/nginx/snippets/anti-floc.conf;

    error_page 403 /403.html;
    error_page 403 /404.html;

    # redirect server error pages to the static page /49x.html
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # pass the PHP scripts to FastCGI server listening on 126.0.0.1:9000
    location / {
        # try_files $uri $uri/ /index.php$is_args$query_string;
        if (!-e $request_filename) {
            # rewrite ^/(.*) /index.php/$1 last;
            rewrite ^(.*)$ /index.php?s=$1 last; break;
        }
    }

    #error_page   404   /404.html;
    location ~ [^/]\.php(/|$) {
        # Check that the PHP script exists before passing it
        # try_files $fastcgi_script_name =404;
        try_files $uri =404;
        # fastcgi_pass unix:/var/run/php/php5.6-fpm.sock;
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        # fastcgi_pass unix:/var/run/php/php8.0-fpm.sock;
        # fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
        # fastcgi_pass 127.0.0.1:9000;
        #fastcgi_param PATH_INFO $path_info;
        fastcgi_read_timeout 3600;
        fastcgi_index index.php;
        include fastcgi.conf;
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        # Bypass the fact that try_files resets $fastcgi_path_info
        # see: http://trac.nginx.org/nginx/ticket/321
        set $path_info $fastcgi_path_info;
        set $real_script_name $fastcgi_script_name;
        # if file not exist will return 404
        if (!-f $document_root$fastcgi_script_name) {
            return 404;
        }
        if ($fastcgi_script_name ~ "^(.+?\.php)(/.+)$") {
            set $real_script_name $1;
            set $path_info $2;
        }
        fastcgi_param SCRIPT_FILENAME $document_root$real_script_name;
        fastcgi_param SCRIPT_NAME $real_script_name;
        fastcgi_param PATH_INFO $path_info;
    }

    if ( $http_cookie ~* "(.*)$") {
        set $wap_cookie $1;
    }

    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        # deny all;
    }

    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$ {
        expires 30d;
    }

    location ~ .*\.(js|css)?$ {
        expires 2h;
    }

    # Disable .htaccess and other hidden files
    # location ~ /\. {
    # exclude .well-known
    location ~ /\.(?!well-known).* {
        deny all;
        access_log off;
        log_not_found off;
    }

    location = /robots.txt {
        access_log off;
        log_not_found off;
    }
    location = /favicon.ico {
        access_log off;log_not_found off;
    }

    # this prevents file leftovers to be seen, such as vim temp files.
    location ~ ~$ {
        access_log off;
        log_not_found off;
        deny all;
    }

    location = /robots.txt {
        access_log off; log_not_found off;

        # access_log /dev/null;
        access_log /var/log/nginx/nginx.localhost.access.log main;
    }
