server
{
    listen 80;
    server_name localhost;
    root /var/www/html/projects;
    # 目录索引
    index index.php index.html index.htm;
    # 自动索引目录文件
    autoindex  on;
    # 使用 301 强制 HTTPS
    # return 301 https://$server_name$request_uri;
    # rewrite conf
    include /etc/nginx/conf.d/rewrite/wordpress.conf;

    if ($scheme != "https") { return 301 https://$host$request_uri; }

    charset utf-8;
    client_max_body_size 100M;
    fastcgi_read_timeout 1800;

    # 添加几条有关安全的响应头,与 Google+ 的配置类似
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

         # redirect server error pages to the static page /50x.html
    # 将 [404] 错误交给 [/index.php] 处理，表示由 Laravel 渲染美观的错误页面。
    error_page 404 /index.php;
    error_page   500 502 503 504  /50x.html;
    location = /50x.html
    {
        root   /usr/share/nginx/html;
    }


    # 关闭 [/favicon.ico] 和 [/robots.txt] 的访问日志。
    # 并且即使它们不存在，也不写入错误日志。
    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    # 除符合正则表达式 [/\.(?!well-known).*] 之外的 URI，全部拒绝访问
    # 也就是说，拒绝公开以 [.] 开头的目录，[.well-known] 除外
    location ~ /.well-known {allow all;}
    location ~ /\.(?!well-known).* { deny all; }
    location ~ /\. { deny all; }
    # deny access to .htaccess files, if Apache's document root concurs with nginx's one
    location ~ /\.(ht|git|svn|env){ deny all; }
    location ~ ^(.*)\/\.svn\/ { deny all; }
    location ~ ^(.*)\/\.svn\/ { deny all; }
    location ~ /\.(svn|git) { deny all; }
    location ~ /\.(svn|git) { deny all; }


    location ~ ^/(environments|vendor|console|common|console|tests|requirements\.php|composer\.lock|composer\.json|yii|init)/
    {
        deny all;
    }

    location /
    {
        index  index.php;
        try_files $uri $uri/ /index.html;

        if (!-d $request_filename) {
            rewrite ^/(.+)/$ /$1 permanent;
        }

        if (!-e $request_filename)
        {
            rewrite . /index.php last;
            rewrite ^/backend(.*)$ /backend/index.php?s=$1 last;
            rewrite ^/wechat(.*)$ /wechat/index.php?s=$1 last;
            rewrite ^/api(.*)$ /api/index.php?s=$1 last;
            rewrite ^/(.*)$ /index.php?s=$1 last;
            break;
         }
    }

    location ~ .*\.(php|php5)?$
    {   
        fastcgi_pass unix:/tmp/php-cgi.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        break;
    }

    # location ~ .*$
    # location ~ \.php$
    # location ~ \.php$
    location ~* \.php$
    {
        try_files $uri =404;
        try_files $uri $uri/ /index.php$is_args$args;
        
        # sock mode
	    # fastcgi_pass   unix:/var/run/php-fpm.sock; 
        # port mode
        include       fastcgi_params;

        fastcgi_index   index.php;
        fastcgi_param PATH_INFO       $fastcgi_path_info;
        fastcgi_pass  base:9000;
        fastcgi_param TIDEWAYS_SAMPLERATE "25";
        fastcgi_param SCRIPT_NAME       $fastcgi_script_name;
        fastcgi_param SCRIPT_FILENAME    $document_root$fastcgi_script_name;
        # fastcgi_param SCRIPT_FILENAME /data/www/rageframe/web/$fastcgi_script_name;
        fastcgi_param PHP_VALUE 'auto_prepend_file=';
        fastcgi_param PHP_VALUE open_basedir=$document_root:/tmp/:/proc/;
        fastcgi_param PHP_VALUE "auto_prepend_file=/var/www/projects/data/xhgui-master/external/header.php";
        fastcgi_param PATH_TRANSLATED /data/www/rageframe/web/$fastcgi_path_info;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
    }

    #禁止访问的文件或目录
    location ~ ^/(\.user.ini|\.htaccess|\.git|\.project|LICENSE|README.md)
    {
        return 404;
    }

    location ~* \.(bmp|swf|png|jpg|jpeg|gif|ico|mp4|flv|html|htm|svg|ttf|woff|woff2|eot)$
    {
        # expires       max;
        expires      30d;
        log_not_found off;
        access_log    off;
    }
	location ~ .*\.(js|css)?$
    {
		expires      12h;
	}
    access_log  /var/log/nginx/demo.website.com.log;

}

server {

    listen 80;
    server_name phpinfo.localhost;
    root /var/www/html/phpinfo;
    index index.php;

    location ~* \.php$
    {
        fastcgi_index   index.php;
        fastcgi_pass    base:9000;
        include         fastcgi_params;
        fastcgi_param   SCRIPT_FILENAME    $document_root$fastcgi_script_name;
    }
}

server
{
    ssl on;
    listen       443 ssl http2;
    server_name  127.0.0.1 localhost www.demo.com;
    root   /var/www/html/demo;

    # SSL session过期时间
    ssl_session_timeout  5m;
    ssl_buffer_size 1400;
    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2 SSLv2 SSLv3; 
    # 加密套件
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
    ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    # 由服务器协商最佳的加密算法
    ssl_prefer_server_ciphers   on;

    # 开启HSTS，并设置有效期为“15768000秒”
    add_header Strict-Transport-Security max-age=15768000;

    # Session Cache，将Session缓存到服务器，这可能会占用更多的服务器资源
    ssl_session_cache builtin:1000 shared:SSL:10m;

    # OCSP Stapling开启,OCSP是用于在线查询证书吊销情况的服务，使用OCSP Stapling能将证书有效状态的信息缓存到服务器，提高TLS握手速度
    ssl_stapling on;
    # OCSP Stapling验证开启
    ssl_stapling_verify on;

    # ssl on; format crt pem
    ssl_certificate /etc/nginx/conf.d/certs/*.demo.com.crt;
    ssl_certificate_key /etc/nginx/conf.d/certs/*.demo.com.key;


    location ~ .*$ {
        fastcgi_pass   fpm72:9000;
        fastcgi_index  index.php;
        include        fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root/index.php;
    }
}

#laravel
server {
    listen       80;
    server_name  laravel.cc;
    
    root   /var/www/laravel/public;
    index  index.php index.html index.htm;
    
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    location ~ \.php$ {
        fastcgi_pass   php72:9000;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }
}

#thinkphp
server {
    listen       80;
    server_name  thinkphp.cc;
    
    root   /var/www/thinkphp;
    index  index.php index.html index.htm;
    
    location / {
        if (!-e $request_filename) {
            rewrite  ^(.*)$  /index.php?s=$1  last;
            break;
        }
    }
    
    location ~ \.php$ {
        fastcgi_pass   php56:9000;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }
}
