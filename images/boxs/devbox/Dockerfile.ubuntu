FROM ghcr.io/dockenv/ubuntu:latest
LABEL org.opencontainers.image.title="CodeSpace" \
      org.opencontainers.image.authors="Cloudflying <oss@live.hk>" \
      org.opencontainers.image.source="https://github.com/dockenv/dockenv-images" \
      org.opencontainers.image.url="https://dockenv.github.io" \
      org.opencontainers.image.description='Github CodeSpace/CodeSandBox Dev Image'

ENV DEBIAN_FRONTEND=noninteractive
ENV DEV_USER="dockenv"
ENV DEV_PASSWD="dockenv"
ENV DEV_HOME=/home/${DEV_USER}
ENV HOME=/home/${DEV_USER}
ENV GO_VER="1.21.4"
ENV GH_VER="2.39.2"
ENV DOTNET_VER="8.0"
ENV DOTNET_VER="8.0"

RUN . /etc/os-release \
	# 本地时区设定
	&& echo 'Asia/Shanghai' > /etc/timezone \
	&& rm -fr /etc/localtime && ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \
	&& apt update -y \
	&& apt upgrade -y \
	&& apt install -y ca-certificates \
	# Editor
	&& apt install -y neovim vim \
	# mysql-server
	&& apt install -y redis-server memcached \
	# Python Language
	&& apt install -y python3 python3-pip python3-apt python3-software-properties python3-neovim \
	&& apt install -y lsb-release apt-transport-https apt-utils software-properties-common \
    && apt install -y locales supervisor sudo openssh-server \
    && apt install -y 7zip brotli bzip2 lunzip lzip rpm rar unalz unar unrar unzip unrar-free zip zstd gzip \
        p7zip p7zip-full p7zip-rar \
	# Utils Tools
    && apt install -y fzf bat zsh git jq tree screen less iftop enca \
	# Downloader
    && apt install -y wget curl httpie axel \
	# MultiMedia
    && apt install -y ffmpeg \
	# Network Tools
    && apt install -y lsof net-tools procps htop netcat-openbsd rsync iproute2 whois tcpdump \
    && apt install -y iso-codes openssl gnupg universal-ctags strace psmisc file psutils dnsutils expect \
	# Create Non-root User
	&& useradd -d /home/${DEV_USER} -m -s /bin/zsh ${DEV_USER} \
    && echo "${DEV_USER}:${DEV_PASSWD}" | chpasswd \
    && echo "root:${DEV_PASSWD}" | chpasswd \
    && echo "${DEV_USER} ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers \
	# Install ohmyzsh
	&& git clone --depth 1 https://github.com/ohmyzsh/ohmyzsh.git ${DEV_HOME}/.oh-my-zsh \
	&& cp ${DEV_HOME}/.oh-my-zsh/templates/zshrc.zsh-template ${DEV_HOME}/.zshrc \
    && sed -i 's/ZSH_THEME.*/ZSH_THEME="strug"/g' ${DEV_HOME}/.zshrc \
	# Install Rust ToolChain
	# && sudo -Hu ${DEV_USER} curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y \
	# && sudo -Hu ${DEV_USER} curl -s "https://get.sdkman.io" | bash \
	# && cp -fr ${HOME}/.sdkman ${DEV_HOME}/ \
	# && source ${DEV_HOME}/.sdkman/bin/sdkman-init.sh \
	# && sdk install java \
	# && sdk install ant \
	# && sdk install gradle \
	# && sdk install groovy \
	# && sdk install maven \
	# && sudo -Hu ${DEV_USER} git clone --depth 1 https://github.com/nvm-sh/nvm.git ${DEV_HOME}/.nvm \
	# && wget -q "https://github.com/cli/cli/releases/download/v${GH_VER}/gh_${GH_VER}_linux_amd64.tar.gz" -O /tmp/github-cli.tar.gz \
	# && tar -xvf /tmp/github-cli.tar.gz -C /opt \
	# && mv "/opt/gh_${GH_VER}_linux_amd64" /tmp/gh \
	# && ln -sf /opt/gh/bin/gh /usr/bin/gh \
	# && wget "https://go.dev/dl/go${GO_VER}.linux-amd64.tar.gz" -O /tmp/go.tar.gz \
	# && tar -xf /tmp/go.tar.gz -C /opt \
	# && ln -sf /opt/go/bin/go /usr/bin/go \
	# && ln -sf /opt/go/bin/gofmt /usr/bin/gofmt \
	# && wget -q "https://packages.microsoft.com/config/ubuntu/${VERSION_ID}/packages-microsoft-prod.deb" -O /tmp/mspkg.deb \
	# && dpkg -i /tmp/mspkg.deb \
	# && apt update -y \
	# && apt install -y dotnet-runtime-${DOTNET_VER} dotnet-sdk-${DOTNET_VER} \
	# SSH Config
	&& sed -i 's/^#ClientAliveInterval.*/ClientAliveInterval 60/g' /etc/ssh/sshd_config \
	&& sed -i 's/^#PermitRootLogin.*/PermitRootLogin no/g' /etc/ssh/sshd_config \
	# && echo 'export NVM_DIR="$HOME/.nvm"' >> ${DEV_HOME}/.zshrc \
	# && echo '[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"' >> ${DEV_HOME}/.zshrc \
	# && source ${DEV_HOME}/.nvm/nvm.sh \
	# && sudo -Hu dockenv nvm install --lts \
	# && sudo -Hu dockenv npm i -g vite pnpm wrangler bower yarn grunt gulp webpack webpack-cli \
	&& chmod -R 755 ${DEV_HOME} \
	&& chown -R ${DEV_USER}:${DEV_USER} ${DEV_HOME} \
	# && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4F4EA0AAE5267A6C
	&& add-apt-repository --yes ppa:ondrej/php \
	&& apt install -y php8.3 php8.3-amqp php8.3-ast php8.3-bcmath php8.3-bz2 php8.3-cli php8.3-curl php8.3-dba \
		php8.3-enchant php8.3-fpm php8.3-gd php8.3-gmp php8.3-imagick php8.3-imap php8.3-inotify php8.3-intl php8.3-ldap \
		php8.3-mbstring php8.3-memcached php8.3-mongodb php8.3-msgpack php8.3-mysql php8.3-opcache \
		php8.3-pgsql php8.3-pspell php8.3-rdkafka php8.3-readline php8.3-redis php8.3-snmp php8.3-soap php8.3-solr php8.3-sqlite3 \
		php8.3-ssh2 php8.3-stomp php8.3-swoole php8.3-xdebug php8.3-xml php8.3-xmlrpc php8.3-xsl php8.3-yaml php8.3-zip \
		php8.3-zmq php8.3-zstd php8.3-dev \
	&& apt install -y php8.2 php8.2-amqp php8.2-ast php8.2-bcmath php8.2-bz2 php8.2-cli php8.2-curl php8.2-dba \
		php8.2-enchant php8.2-fpm php8.2-gd php8.2-gmp php8.2-imagick php8.2-imap php8.2-inotify php8.2-intl php8.2-ldap \
		php8.2-lz4 php8.2-mbstring php8.2-mcrypt php8.2-memcached php8.2-mongodb php8.2-msgpack php8.2-mysql php8.2-opcache \
		php8.2-pgsql php8.2-pspell php8.2-rdkafka php8.2-readline php8.2-redis php8.2-snmp php8.2-soap php8.2-solr php8.2-sqlite3 \
		php8.2-ssh2 php8.2-stomp php8.2-swoole php8.2-xdebug php8.2-xml php8.2-xmlrpc php8.2-xsl php8.2-yaml php8.2-zip \
		php8.2-zmq php8.2-zstd php8.2-dev \
	# && apt install -y php8.1 php8.1-amqp php8.1-ast php8.1-bcmath php8.1-bz2 php8.1-cli php8.1-curl php8.1-dba \
	# 	php8.1-enchant php8.1-fpm php8.1-gd php8.1-gmp php8.1-imagick php8.1-imap php8.1-inotify php8.1-intl php8.1-ldap \
	# 	php8.1-lz4 php8.1-mbstring php8.1-mcrypt php8.1-memcached php8.1-mongodb php8.1-msgpack php8.1-mysql php8.1-opcache \
	# 	php8.1-pgsql php8.1-pspell php8.1-rdkafka php8.1-readline php8.1-redis php8.1-snmp php8.1-soap php8.1-solr php8.1-sqlite3 \
	# 	php8.1-ssh2 php8.1-stomp php8.1-swoole php8.1-xdebug php8.1-xml php8.1-xmlrpc php8.1-xsl php8.1-yaml php8.1-zip \
	# 	php8.1-zmq php8.1-zstd php8.1-dev \
	&& apt install -y php7.4 php7.4-amqp php7.4-ast php7.4-bcmath php7.4-bz2 php7.4-cli php7.4-curl php7.4-dba \
		php7.4-enchant php7.4-fpm php7.4-gd php7.4-gmp php7.4-imagick php7.4-imap php7.4-inotify php7.4-intl php7.4-ldap \
		php7.4-lz4 php7.4-mbstring php7.4-mcrypt php7.4-memcached php7.4-mongodb php7.4-msgpack php7.4-mysql php7.4-opcache \
		php7.4-pgsql php7.4-pspell php7.4-rdkafka php7.4-readline php7.4-redis php7.4-snmp php7.4-soap php7.4-solr php7.4-sqlite3 \
		php7.4-ssh2 php7.4-stomp php7.4-swoole php7.4-xdebug php7.4-xml php7.4-xmlrpc php7.4-xsl php7.4-yaml php7.4-zip \
		php7.4-zmq php7.4-zstd php7.4-dev

